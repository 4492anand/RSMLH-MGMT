services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=hospitaldb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=myuser
      - RABBITMQ_DEFAULT_PASS=secret
    ports:
      - "5672:5672"  # AMQP port
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/hospitaldb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=secret
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=myuser
      - SPRING_RABBITMQ_PASSWORD=secret
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - rabbitmq
    links:
      - postgres
      - rabbitmq

  # Optional MySQL service (comment out if not needed)
  # mysql:
  #   image: mysql:latest
  #   environment:
  #     - MYSQL_DATABASE=hospitaldb
  #     - MYSQL_USER=myuser
  #     - MYSQL_PASSWORD=secret
  #     - MYSQL_ROOT_PASSWORD=verysecret
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - mysql-data:/var/lib/mysql
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

volumes:
  postgres-data:
  rabbitmq-data:
  # mysql-data:  # Uncomment if using MySQL